//: [Previous](@previous)
//: # –û—Å–Ω–æ–≤—ã
//: ## –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ãe
/*:
 let —Å–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
 
 var —Å–æ–∑–¥–∞—ë—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
*/
let thisIsConstant = "Const"
var thisIsVariable = "Var"
//: –ó–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º, –∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∑–∞–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ–¥–∏–Ω–æ–∂–¥—ã ‚Äî –≤ –º–æ–º–µ–Ω—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è.
thisIsVariable = "Some new value"
//thisIsConstant = "–µ—Å–ª–∏ –Ω–µ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —Ç–æ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞" // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É


//: ## –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
//: ### Swift - —è–∑—ã–∫ —Å–æ —Å—Ç—Ä–æ–≥–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π. Swift –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –≤–∞—Å –∏–º–µ—Ç—å —á–µ—Ç–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ —Ç–∏–ø–∞—Ö –∑–Ω–∞—á–µ–Ω–∏–π, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∫–æ–¥.
//: –¢–∏–ø –ø—Ä–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ï–≥–æ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —è–≤–Ω–æ –∏–ª–∏ –Ω–µ—è–≤–Ω–æ.
let thisIsExplixitlyVar: Float = 42.0
print(type(of: thisIsExplixitlyVar))

let thisIsImplicitlyVar = 42.0
print(type(of: thisIsImplicitlyVar))
//: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–º –º–æ–∂–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞, —á—Ç–æ –∏ —Å–∞–º–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è. –ï—Å–ª–∏ —á–∞—Å—Ç—å –≤–∞—à–µ–≥–æ –∫–æ–¥–∞ –æ–∂–∏–¥–∞–µ—Ç String, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–º—É Int –ø–æ –æ—à–∏–±–∫–µ.
var thisIsVariableWithStringType: String = "Some string"
thisIsVariableWithStringType = "42"
//thisIsVariableWithStringType = 42 // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É
print(thisIsVariable)


//: ## –¶–µ–ª—ã–µ —á–∏—Å–ª–∞
//: ### Integer (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ) - —ç—Ç–æ —á–∏—Å–ª–æ, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫ 42 –∏ -23. –¶–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –ª–∏–±–æ –∑–Ω–∞–∫–æ–≤—ã–º–∏ (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏, –Ω–æ–ª—å –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏) –ª–∏–±–æ –±–µ–∑–∑–Ω–∞–∫–æ–≤—ã–º–∏ (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏–ª–∏ –Ω–æ–ª—å).
let integerVariable1 = Int(100000)
let integerVariable2 = 100000
//: –ü—Ä–∏ –∑–∞–ø–∏—Å–∏ —á–∏—Å–ª–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –º–æ–∂–Ω–æ —Ä–∞–∑–¥–µ–ª—è—Ç—å –Ω–∞ –±–ª–æ–∫–∏ —Ü–∏—Ñ—Ä, –≤–æ—Ç —Ç–∞–∫
let separatedLongInteger = 1_000_000_000
//: –¢–∞–∫ –∂–µ —á–∏—Å–ª–∞ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö —Å—á–∏—Å–ª–µ–Ω–∏—è
let hexInteger = 0xDEADBEEF
let octoInteger = 0o776655
let binaryInteger = 0b1101001000111

//let smallIntValue: Int8 = 128


//: ## –î—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞
//: ### –ß–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π - —ç—Ç–æ —á–∏—Å–ª–æ —Å –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç—å—é, –Ω–∞–ø—Ä–∏–º–µ—Ä –∫–∞–∫ 3.14159, 0.1, –∏ -273.15.
//: Float - 32-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ. Double - 64-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ.
let floatValue1: Float = Float(42.0)
let floatValue2: Float = 42.0
let doubleValue1: Double = Double(42.0)
let doubleValue2: Double = 42.0



//: ## –ë—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è
//: ### –í Swift –µ—Å—Ç—å –ø—Ä–æ—Å—Ç–æ–π –ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–∏–ø Bool. –≠—Ç–æ—Ç —Ç–∏–ø –Ω–∞–∑—ã–≤–∞—é—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏–º, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ true –∏–ª–∏ false.
let boolValue1 = true
let boolValue2 = false


//: ## –°—Ç—Ä–æ–∫–∏ –∏ —Å–∏–º–≤–æ–ª—ã
//: ### –°—Ç—Ä–æ–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä "hello, world" –∏–ª–∏ "albatross". –°—Ç—Ä–æ–∫–∏ –≤ Swift –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–∏–ø–æ–º String. –ö –∑–Ω–∞—á–µ–Ω–∏—é —Ç–∏–ø–∞ String –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏, –≤–∫–ª—é—á–∞—è –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—é –∑–Ω–∞—á–µ–Ω–∏–π —Ç–∏–ø–∞ Character.
//: –°—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
let oneLineString1 = String("–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞")
let oneLineString2 = "–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞"
//: –°—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
let multilineString = """
–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞
"""
//: –≠—Ç–∏ —Ñ–æ—Ä–º—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã, —Å–º–æ—Ç—Ä–∏—Ç–µ
oneLineString2 == multilineString
(oneLineString2 as AnyObject) === (multilineString as AnyObject)
//: –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞, –≤–æ—Ç —Ç–∞–∫:
let wrappedMultilineString = """
–≠—Ç–æ \
—Å—Ç—Ä–æ–∫–∞
"""
oneLineString2 == wrappedMultilineString
//: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–∞—Ö –Ω–∞–¥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å. `\\` —ç—Ç–æ `\`, `\"` —ç—Ç–æ `"`, `\n` ‚Äî –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏, `\t` ‚Äî —Ç–∞–±—É–ª—è—Ü–∏—è –∏ —Ç.–¥.
let stringWithEnter = "–°—Ç—Ä–æ–∫–∞ —Å \n –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ç—Ä–æ–∫–∏"
print(stringWithEnter)
//: –í —Å—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è, –≤–æ—Ç —Ç–∞–∫:
let insideValue = "–≤–Ω—É—Ç—Ä–∏"
print("–û–Ω–æ –æ–∫–∞–∂–µ—Ç—Å—è \(insideValue)")
//: –°—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è—Ç –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ –Ω–∏–º –º–æ–∂–Ω–æ –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º `for..in` —Ü–∏–∫–ª–æ–º, –≤–æ—Ç —Ç–∞–∫
for character in "–ü—ë—Å!üê∂" {
    print(character)
}
//: –¢–∞–∫ –∂–µ —Å—Ç—Ä–æ–∫—É –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤, –≤–æ—Ç —Ç–∞–∫
let catCharacters: [Character] = ["–ö", "–æ", "—Ç", "!", "üê±"]
let catString = String(catCharacters)
print(catString)
//: –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä –Ω–∞–ø–µ—á–∞—Ç–∞–µ—Ç —Ü–∏—Ñ—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–º–µ—Ä–∞ —Å–∏–º–≤–æ–ª–æ–≤ —Ç–∞–±–ª–∏—Ü—ã Unicodes
// –¶–∏—Ñ—Ä—ã –æ—Ç 0 –¥–æ 9
for value in 48...57 {
    print(Unicode.Scalar(value)!)
}
//: –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä –Ω–∞–ø–µ—á–∞—Ç–∞–µ—Ç —Å–∏–º–≤–æ–ª—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Unicodes
let value = "abc"
for u in value.utf8 {
    print(u)
}
//: –°—Ç—Ä–æ–∫—É –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Ç–æ, –ø—É—Å—Ç–∞—è –ª–∏ –æ–Ω–∞ –≤–æ—Ç —Ç–∞–∫
print(catString.isEmpty)
//: –ò —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –≤ –Ω–µ–π —Å–∏–º–≤–æ–ª–æ–≤ –≤–æ—Ç —Ç–∞–∫
print(catString.count)
//: –í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ `count` –≤—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ unicode —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ –∫ —Å—Ç—Ä–æ–∫–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–∏–º–≤–æ–ª-–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, —Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–µ–π –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è
var word = "cafe"
print("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ \(word) = \(word.count)")

word += "\u{301}" // cafeÃÅ

print("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ \(word) = \(word.count)")


//: ## –ö–æ—Ä—Ç–µ–∂–∏
//: ### –ö–æ—Ä—Ç–µ–∂–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –æ–¥–Ω–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ó–Ω–∞—á–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ä—Ç–µ–∂–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±–æ–≥–æ —Ç–∏–ø–∞. –ß–∞—â–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π.

let http404Error: (Int, String) = (404, "Not Found")

let (statusCode, statusMessage) = http404Error
print("The status code is \(statusCode)")
print("The status message is \(statusMessage)")


//: ## –ó–∞–¥–∞—á–∏

//: #1
//let ‰Ω†Â•Ω = "‰Ω†Â•Ω‰∏ñÁïå"
//let œÄ = 3.14159
//let üî• = "–ê–ì–û–ù–¨"

//: #2
//let dog: String
//dog = "Some dog"

//: #3
//let someNumber = 0_0_0_0_0123.4_56
//print(someNumber)

//: #4
//var cat = "?"; cat = "CAT"; print(cat);

//: #5
//typealias CustomInt = Int
//let customIntValue: CustomInt = 100
//print(customIntValue)

//: [Next](@next)
